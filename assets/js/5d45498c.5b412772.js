(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{137:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),u=function(e){var t=r.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=u(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=u(n),p=a,f=l["".concat(s,".").concat(p)]||l[p]||m[p]||o;return n?r.a.createElement(f,c(c({ref:t},d),{},{components:n})):r.a.createElement(f,c({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var d=2;d<o;d++)s[d]=n[d];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return d})),n.d(t,"CarbonAds",(function(){return u})),n.d(t,"default",(function(){return m}));var a=n(3),r=n(7),o=n(0),s=n(137),c={id:"advanced-transforms",title:"Advanced transforms",layout:"Guide",order:5},i={unversionedId:"advanced-transforms",id:"advanced-transforms",isDocsHomePage:!1,title:"Advanced transforms",description:"export const CarbonAds = () => {",source:"@site/docs/advanced-transforms.mdx",sourceDirName:".",slug:"/advanced-transforms",permalink:"/docs/advanced-transforms",editUrl:"https://github.com/cssnano/cssnano/edit/master/site/docs/advanced-transforms.mdx",version:"current",lastUpdatedBy:"Aicke Schulz",lastUpdatedAt:1613291641,formattedLastUpdatedAt:"2/14/2021",frontMatter:{id:"advanced-transforms",title:"Advanced transforms",layout:"Guide",order:5},sidebar:"docs",previous:{title:"Presets",permalink:"/docs/presets"},next:{title:"Contributing",permalink:"/docs/contributing"}},d=[{value:"What are advanced transforms?",id:"what-are-advanced-transforms",children:[{value:"Assumes concatenation",id:"assumes-concatenation",children:[]},{value:"Changes semantics",id:"changes-semantics",children:[]}]},{value:"Using advanced transforms",id:"using-advanced-transforms",children:[]},{value:"Do you have an idea for an advanced transform?",id:"do-you-have-an-idea-for-an-advanced-transform",children:[]}],u=function(){return Object(o.useEffect)((function(){if(!document.getElementById("carbonads")){var e=document.querySelector(".carbon_ads_mdx_wrapper"),t=document.createElement("script");t.src="//cdn.carbonads.com/carbon.js?serve=CEBI62JN&placement=cssnanoco",t.async=!0,t.id="_carbonads_js",e.appendChild(t)}})),Object(s.b)("div",{className:"carbon_ads_mdx_wrapper"})},l={toc:d,CarbonAds:u};function m(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)(u,{mdxType:"CarbonAds"}),Object(s.b)("h2",{id:"what-are-advanced-transforms"},"What are advanced transforms?"),Object(s.b)("p",null,"Certain optimizations are not suitable for all use cases; unlike those that\nwe bundle by default, advanced transforms all carry a certain amount of risk.\nFor each type of transform, we've documented the assumptions that it must make\nabout your CSS in order for the transform to be safe. Most of these transforms\nfall into either or both of categories."),Object(s.b)("h3",{id:"assumes-concatenation"},"Assumes concatenation"),Object(s.b)("p",null,"This transform assumes that the CSS passed through cssnano is all that is needed\nfor a website to run; it doesn't resources from any other source. This ",Object(s.b)("em",{parentName:"p"},"may")," be\nproblematic if the styles you are writing in some way interact with third party\nstyles, or you are using multiple stylesheets instead of concatenating them, or\nyou are injecting CSS via JavaScript, for example."),Object(s.b)("p",null,"A good example is ",Object(s.b)("a",{parentName:"p",href:"https://github.com/cssnano/cssnano/tree/master/packages/postcss-merge-idents"},"postcss-merge-idents"),"; in order for this transform to be safe\nany ",Object(s.b)("inlineCode",{parentName:"p"},"@keyframes")," rules and selectors that utilise them must be in the same file."),Object(s.b)("h3",{id:"changes-semantics"},"Changes semantics"),Object(s.b)("p",null,"This transform changes CSS semantically; it may remove styles based on certain\ncharacteristics of the CSS, or it might update values to make the CSS smaller\noverall. Depending on exactly what the transform does, this ",Object(s.b)("em",{parentName:"p"},"may")," be undesirable\nbecause it might change the appearance of your website in certain use cases."),Object(s.b)("p",null,"A good example is ",Object(s.b)("a",{parentName:"p",href:"https://github.com/postcss/autoprefixer"},"autoprefixer"),"; this transform changes CSS semantics by\nremoving out of date vendor prefixes. In order for this transform to be safe,\nyour ",Object(s.b)("a",{parentName:"p",href:"https://github.com/ai/browserslist"},"browserslist")," configuration must reflect the browsers that your site\nchooses to support."),Object(s.b)("h2",{id:"using-advanced-transforms"},"Using advanced transforms"),Object(s.b)("p",null,"Advanced transforms are not bundled with cssnano by default, so you'll need\nto install the preset alongside cssnano:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-shell"},"npm install cssnano-preset-advanced --save-dev\n")),Object(s.b)("p",null,"You can then load it using any of the techniques mentioned in\n",Object(s.b)("a",{parentName:"p",href:"/docs/presets"},"our presets guide"),". For example, using ",Object(s.b)("inlineCode",{parentName:"p"},"package.json"),":"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "awesome-application",\n  "cssnano": {\n    "preset": "advanced"\n  }\n}\n')),Object(s.b)("h2",{id:"do-you-have-an-idea-for-an-advanced-transform"},"Do you have an idea for an advanced transform?"),Object(s.b)("p",null,"Did we miss an opportunity to compress your CSS further? You can learn about\n",Object(s.b)("a",{parentName:"p",href:"/docs/contributing"},"how to contribute")," in our next guide."))}m.isMDXComponent=!0}}]);