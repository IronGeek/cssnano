(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{145:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var i=n(2),r=n(6),o=(n(0),n(176)),s={id:"Introduction",title:"Introduction",layout:"Guide",next:"getting-started",hide_title:!1,hide_table_of_contents:!1},a={id:"Introduction",title:"Introduction",description:"What is minification?",source:"@site/docs/introduction.md",permalink:"/docs/Introduction",editUrl:"https://github.com/cssnano/cssnano/edit/master/website/docs/introduction.md",lastUpdatedBy:"Anix",lastUpdatedAt:1594121590,sidebar:"docs",next:{title:"Getting started",permalink:"/docs/getting-started"}},c=[{value:"What is minification?",id:"what-is-minification",children:[]},{value:"What is cssnano?",id:"what-is-cssnano",children:[]},{value:"How does it benefit me?",id:"how-does-it-benefit-me",children:[{value:"Numerous optimisations",id:"numerous-optimisations",children:[]},{value:"Unified CSS processing",id:"unified-css-processing",children:[]},{value:"Modern architecture &amp; modularity",id:"modern-architecture--modularity",children:[]}]}],u={rightToc:c};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"what-is-minification"},"What is minification?"),Object(o.b)("p",null,"Minification is the process of taking some code and using various methods to\nreduce its size on disk. Unlike techniques such as gzip, which preserve the\noriginal semantics of the CSS file, and are therefore lossless, minification\nis an inherently lossy process, where values can be replaced with smaller\nequivalents, or selectors merged together, for example."),Object(o.b)("p",null,"The end result of a minification step is that the resulting code will behave\nthe same as the original file, but some parts will be altered to reduce the\nsize as much as possible."),Object(o.b)("p",null,"Combining gzip compression with minification leads to the best reduction in\nfile size; but don't just take our word for it. Why not try out ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://npmjs.org/package/css-size"}),"css-size"),", a\nmodule especially created to measure CSS size before & after minification."),Object(o.b)("h2",{id:"what-is-cssnano"},"What is cssnano?"),Object(o.b)("p",null,"cssnano is one such minifier, which is written in ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://nodejs.org"}),"Node.js"),". It's a ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"http://postcss.org"}),"PostCSS"),"\nplugin which you can add to your build process, to ensure that the resulting\nstylesheet is as small as possible for a production environment."),Object(o.b)("p",null,"If you don't know what a build process is, don't worry as we cover this in\n",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/guides/getting-started"}),"our getting started guide"),"."),Object(o.b)("h2",{id:"how-does-it-benefit-me"},"How does it benefit me?"),Object(o.b)("h3",{id:"numerous-optimisations"},"Numerous optimisations"),Object(o.b)("p",null,"We offer many different optimisations, ranging from simple transforms such as\nwhitespace removal, to complex transforms that can merge identical keyframes\nwith different names. See ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/guides/presets"}),"the presets guide")," for\nmore information."),Object(o.b)("h3",{id:"unified-css-processing"},"Unified CSS processing"),Object(o.b)("p",null,"cssnano uses ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"http://postcss.org"}),"PostCSS")," to process the CSS under the hood. Because a lot of\nmodern CSS tools use ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"http://postcss.org"}),"PostCSS"),", you can compose them together to work on a\nsingle abstract syntax tree (AST). This means that the overall processing\ntime is reduced because the CSS does not have to be parsed multiple times."),Object(o.b)("h3",{id:"modern-architecture--modularity"},"Modern architecture & modularity"),Object(o.b)("p",null,"Because we use ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"http://postcss.org"}),"PostCSS"),", we can divide cssnano's responsibilities between many\nplugins, each performing a small optimisation. And many optimisations are scoped\nto a certain subset of CSS properties, which is much safer compared to minifying\nCSS globally using regular expressions."))}l.isMDXComponent=!0},176:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var i=n(0),r=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),l=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=i,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?r.a.createElement(b,a(a({ref:t},u),{},{components:n})):r.a.createElement(b,a({ref:t},u))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var u=2;u<o;u++)s[u]=n[u];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);